#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble

\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2cm
\rightmargin 2.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard

\size footnotesize
Mattias Villani
\begin_inset space \hspace{}
\length 11.5cm
\end_inset

2012-12-04
\end_layout

\begin_layout Standard

\size footnotesize
Avdelning för statistik
\end_layout

\begin_layout Standard

\size footnotesize
Institutionen för datavetenskap
\end_layout

\begin_layout Standard

\size footnotesize
Linköpings universitet
\end_layout

\begin_layout Standard

\size footnotesize
mattias.villani@liu.se
\begin_inset VSpace 1cm
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size large
Bayesian Learning, 6 hp
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
Computer lab 4
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\begin_layout Standard
You can use any programming language for the labs, but my hints, help and
 solutions will be in R.
 
\begin_inset Newline newline
\end_inset

You are allowed to work and submit your labs in pairs, but do make sure
 that both of you are contributing.
\family typewriter

\begin_inset Newline newline
\end_inset


\family default
The 
\series bold
deadline
\series default
 for this lab is 
\series bold
December 17
\series default
.
\family typewriter

\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\begin_layout Enumerate

\emph on
The Metropolis algorithm
\end_layout

\begin_deeper
\begin_layout Enumerate
Program a general function that uses the Metropolis algorithm to generate
 random draws from an arbitrary probability density.
 We will here assume that the probability density is a posterior density
 from some parameter.
 The user of your function should be able to supply her own posterior density
 function and still be able to use your Metropolis function.
 This is not so straightforward, unless you have come across 
\emph on
function objects
\emph default
 in R and the triple dot (
\family typewriter
\size footnotesize
...
\family default
\size default
) wildcard argument.
 Let me give you the roadmap.
 Ok, take a deep breath ...
\begin_inset Newline newline
\end_inset

First, one of the input arguments of your Metropolis function should be
 
\family typewriter
\size footnotesize
logPostFunc
\family default
\size default
 (or some other suitable name).
 
\family typewriter
\size footnotesize
logPostFunc 
\family default
\size default
is a 
\emph on
function object
\emph default
 that computes the log posterior density at any value of the parameter vector.
 This is needed when you compute the acceptance probability of the Metropolis
 algorithm.
 I suggest always to program the 
\emph on
log
\emph default
 posterior density, since logs are more stable and avoids problems with
 too small or large numbers (overflow).
 Note that the ratio of posterior densities in the Metropolis acceptance
 probability can be written
\begin_inset Formula 
\[
\frac{p(\theta^{\ast}|y)}{p(\theta^{(t-1)}|y)}=\exp\left[\log p(\theta^{\ast}|y)-\log p(\theta^{(t-1)}|y)\right]
\]

\end_inset

This is smart since the large or small common factors in 
\begin_inset Formula $p(\theta^{\ast}|y)$
\end_inset

 and 
\begin_inset Formula $p(\theta^{(t-1)}|y)$
\end_inset

 cancel out before we evaluate the exponential function (which can otherwise
 overflow).
 
\begin_inset Newline newline
\end_inset

Second, the first argument of your (log) posterior function should be 
\family typewriter
\size footnotesize
theta
\family default
\size default
, the (vector) of parameters for which the posterior density is evaluated.
 You can of course use some other name for the variable, but it must be
 the 
\emph on
first
\emph default
 argument of the posterior density function.
\begin_inset Newline newline
\end_inset

Third, the user's posterior density is also a function of the data and prior
 hyperparameters and those need to be supplied to the Metropolis function
 in some way.
 The nice way of doing that is use the triple dot (
\family typewriter
\size footnotesize
...
\family default
\size default
) argument which is like a wildcard for 
\emph on
any
\emph default
 parameters supplied by the user.
 This makes it possible to use the Metropolis function for any problem,
 even when you as a programmer don't know what the user's posterior density
 function looks like or what kind of data and hyperparameters being used
 in that particular problem.
 To make all of this very clear (I hope!) I give a simple code below where
 the log posterior density for the Bernoulli model with a Beta prior is
 coded.
 That log posterior density is then used in a useless, but illustrative,
 function 
\family typewriter
\size footnotesize
MultiplyByTwo
\family default
\size default
 that returns 2 times the log posterior density evalated at 
\begin_inset Formula $\theta=0.3$
\end_inset

.
 Note how the 
\family typewriter
\size footnotesize
MultiplyByTwo 
\family default
\size default
takes a function object as input and how it uses the triple dot (
\family typewriter
\size footnotesize
...
\family default
\size default
) argument to supply the data 
\begin_inset Formula $s$
\end_inset

 and 
\begin_inset Formula $f$
\end_inset

, and the prior hyperparameters 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 without explicitly using these symbols inside the function.
 That makes the useless 
\family typewriter
\size footnotesize
MultiplyByTwo 
\family default
\size default
function applicable for 
\emph on
any
\emph default
 function.
\begin_inset Newline newline
\end_inset

Matlab users: Here is one instance where Matlab's lack of proper function
 objects becomes a pain.
 You can do the same thing with 
\family typewriter
\size footnotesize
eval()
\family default
\size default
 and 
\family typewriter
\size footnotesize
varargin
\family default
\size default
, however, but it is not as pretty as in R or Python.
 See the Matlab help.
\end_layout

\begin_layout Enumerate
Use your Metropolis function from a) to simulate from the posterior 
\begin_inset Formula $\theta$
\end_inset

 of the Bernoulli model with the data 
\begin_inset Formula $s=10$
\end_inset

, 
\begin_inset Formula $f=3$
\end_inset

.
 Use a 
\begin_inset Formula $\theta\sim Beta(3,3)$
\end_inset

 prior.
 
\begin_inset Newline newline
\end_inset

[Postscript: I turns out that this problem was a little bit harder than
 I realized when I wrote it.
 But the complication, which I will now give the solutions to, is a very
 useful exercise.
 This is a very common situation in practise.].
 Note that here we run in to problem both with numerical optimization and
 the Metropolis algorithm since the parameter space is restricted to 
\begin_inset Formula $\theta\in[0,1]$
\end_inset

, the unit interval.
 The usual approach is to re-parametrize the model so that the parameter
 space is unrestricted.
 The problem is that a numerical optimizer may move outside of 
\begin_inset Formula $[0,1]$
\end_inset

 and the algorithm crashes.
 The same thing can easily happen with the Metropolis algorithm, unless
 the proposal density is a density on 
\begin_inset Formula $[0,1]$
\end_inset

.
 Since the parameter space is 
\begin_inset Formula $[0,1]$
\end_inset

 a common choice of transformation is the logit (or log-odds):
\begin_inset Formula 
\[
\phi=\log\frac{\theta}{1-\theta}.
\]

\end_inset

Note that 
\begin_inset Formula $-\infty<\phi<\infty$
\end_inset

, which is much easier to work with.
 Let's denote this transformation by 
\begin_inset Formula $\phi=g(\theta)$
\end_inset

.
 We can now proceed by analyzing 
\begin_inset Formula $\phi$
\end_inset

, that is we can now try to sample from the posterior of 
\begin_inset Formula $\phi$
\end_inset

.
 But we need to be a little careful.
 What is the posterior of 
\begin_inset Formula $\phi$
\end_inset

? The posterior of 
\begin_inset Formula $\theta$
\end_inset

 is the 
\begin_inset Formula $Beta(s+\alpha,f+\mathbf{\beta})$
\end_inset

 density, which has density
\begin_inset Formula 
\[
f_{\theta}(\theta)\propto\theta^{\alpha+s-1}(1-\theta)^{\beta+f-1}
\]

\end_inset

[I am using the 
\begin_inset Formula $f_{\theta}(\theta)$
\end_inset

 to denote the density, to match the notation of the Wikipedia page listed
 below.
 This posterior density is of course conditional on the data, 
\begin_inset Formula $y$
\end_inset

, but I suppress that here for notational clarity].
 To obtain the posterior density of 
\begin_inset Formula $\phi$
\end_inset

 we need to use the change-of-variables formula (see http://en.wikipedia.org/wiki/
Probability_density_function#
\begin_inset Newline newline
\end_inset

Dependent_variables_and_change_of_variables).
 This formula says that the posterior density of 
\begin_inset Formula $\phi$
\end_inset

 is 
\begin_inset Formula 
\begin{equation}
f_{\phi}(\phi)=\left(\frac{\exp(\phi)}{1+\exp(\phi)}\right)^{\alpha+s-1}\left(1-\left(\frac{\exp(\phi)}{1+\exp(\phi)}\right)\right)^{\beta+f-1}\cdot\frac{\exp(\phi)}{\left[1+\exp(\phi)\right]^{2}}\label{eq:posteriorPhi}
\end{equation}

\end_inset

since 
\begin_inset Formula $\theta=\frac{\exp(\phi)}{1+\exp(\phi)}=g^{-1}(\phi)$
\end_inset

 is the inverse transformation of the logit, and 
\begin_inset Formula 
\[
\frac{\exp(\phi)}{\left[1+\exp(\phi)\right]^{2}}
\]

\end_inset

is the (absolute value of the) derivative of the inverse transformation.
 [As a side note, I once helped one of the major central banks in Europe
 to correct their Bayesian analysis of one of their main models for policy
 analysis.
 They had forgotten the derivate of the inverse transformation ...] If you
 didn't quite follow this, the bottom line is that you are now working with
 a new parameter 
\begin_inset Formula $\phi$
\end_inset

 whose posterior density is given by the expression in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:posteriorPhi"

\end_inset

 above.
 To make it easy for you, I have posted this function on the web page (under
 Timetable).
 Note that once you have obtained a posterior sample for 
\begin_inset Formula $\phi$
\end_inset

: 
\begin_inset Formula $\phi^{(1)},\phi^{(2)},...,\phi^{(N)}$
\end_inset

 you can transform each draw back to 
\begin_inset Formula $\theta$
\end_inset

-space by applying the inverse logit transformation on each draw: 
\begin_inset Formula $\theta^{(1)}=\frac{\exp(\phi^{(1)})}{1+\exp(\phi^{(1)})}$
\end_inset

, 
\begin_inset Formula $\theta^{(2)}=\frac{\exp(\phi^{(2)})}{1+\exp(\phi^{(2)})}$
\end_inset

 ...
 
\begin_inset Formula $\theta^{(N)}=\frac{\exp(\phi^{(N)})}{1+\exp(\phi^{(N)})}$
\end_inset

.
 The draws 
\begin_inset Formula $\theta^{(1)},\theta^{(2)},...,\theta^{(N)}$
\end_inset

 are now from the posterior of 
\begin_inset Formula $\theta$
\end_inset

!
\end_layout

\begin_layout Enumerate
Use your Metropolis function to simulate from the posterior of the 
\begin_inset Formula $\beta$
\end_inset

 vector in the logistic regression model in the spam data from Lab 3.
 Compare with the normal approximation obtained in Lab 3, Exercise 2a.
 Don't forget than my code OptimizeSpamR.zip computes the observed information
 matrix and contains the code for the log posterior of the logistic regression
 (re-use it!).
\end_layout

\begin_layout Enumerate
[Bonus question for PhD students].
 Use your Metropolis function to simulate from the posterior of the 
\begin_inset Formula $\beta$
\end_inset

 vector in the probit regression model in the spam data from Lab 3.
 Compare the MCMC efficiency of your Metropolis draws to the draws from
 your Gibbs sampler in Lab 3, Exercise 2c.
 If you fail to compute the observed information matrix (the numerical optimizat
ion is tricky here), you can try with some other covariance matrix in the
 proposal density, perhaps an identity matrix or something smarter.]
\end_layout

\end_deeper
\begin_layout Standard

\size footnotesize
\begin_inset VSpace 0.5cm
\end_inset


\end_layout

\begin_layout Standard

\shape smallcaps
May Bayes be with you!
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<TemplateCode, message=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# This is the log posterior density of the beta(s+a,f+b) density 
\end_layout

\begin_layout Plain Layout

LogPostBernBeta <- function(theta, s, f, a, b){   
\end_layout

\begin_layout Plain Layout

	logPost <- (s+a-1)*log(theta) + (f+b-1)*log(1-theta)   
\end_layout

\begin_layout Plain Layout

	return(logPost) 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Testing if the log posterior function works
\end_layout

\begin_layout Plain Layout

s <- 8;f <- 2;a <- 1;b <- 1 
\end_layout

\begin_layout Plain Layout

logPost <- LogPostBernBeta(theta = 0.1, s, f, a, b)  
\end_layout

\begin_layout Plain Layout

print(logPost)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# This is a rather useless function that takes the function myFunction,
 
\end_layout

\begin_layout Plain Layout

# evaluates it at x = 0.3, and then returns two times the function value.
 
\end_layout

\begin_layout Plain Layout

MultiplyByTwo <- function(myFunction, ...){   
\end_layout

\begin_layout Plain Layout

	x <- 0.3   
\end_layout

\begin_layout Plain Layout

    y <- myFunction(x,...)
\end_layout

\begin_layout Plain Layout

	return(2*y) 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

MultiplyByTwo(LogPostBernBeta,s,f,a,b)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_body
\end_document
